---
- name: Import facts
  ansible.builtin.import_role:
    name: k3s
    tasks_from: facts

- name: Chart Validation
  ansible.builtin.import_tasks:
    file: validation.yaml

- name: Install Dependencies
  when: ansible_host in k3s_server_hosts
  block:
    - name: Set checksums fact
      ansible.builtin.uri:
        url: '{{ sealedsecrets_release_url_checksums }}'
        return_content: true
      register: checksums
      run_once: true

    - name: Set sha256 checksum fact
      ansible.builtin.set_fact:
        sha256_checksum: "{{ item.split(' ')[0] }}"
      loop: "{{ checksums.content.split('\n') }}"
      when: sealedsecrets_vars.release.file in item
      run_once: true

    - name: Download archive
      ansible.builtin.get_url:
        url: '{{ sealedsecrets_release_url_file }}'
        checksum: sha256:{{ sha256_checksum }}
        dest: /tmp
        owner: root
        group: root
        mode: '0644'
      register: result
      delay: 1
      retries: 3
      until: result is not failed

    - name: Install binary
      ansible.builtin.unarchive:
        src: /tmp/{{ sealedsecrets_vars.release.file }}
        dest: /usr/local/bin
        owner: root
        group: root
        mode: '0755'
        remote_src: true

    - name: Delete archive
      ansible.builtin.file:
        path: '{{ item }}'
        state: absent
      loop:
        - /tmp/{{ sealedsecrets_vars.release.file }}
        - /usr/local/bin/LICENSE
        - /usr/local/bin/README.md

    - name: Add repository
      kubernetes.core.helm_repository:
        name: '{{ sealedsecrets_vars.kubernetes.helm.repository.org }}'
        repo_url: '{{ sealedsecrets_vars.kubernetes.helm.repository.url }}/{{ sealedsecrets_vars.kubernetes.helm.repository.name }}'

- name: Install chart
  kubernetes.core.helm:
    chart_ref: '{{ sealedsecrets_project_chart }}'
    chart_version: '{{ sealedsecrets_vars.kubernetes.helm.chart.version }}'
    kubeconfig: '{{ k3s_vars.directory.config }}/k3s.yaml'
    name: '{{ sealedsecrets_vars.kubernetes.helm.chart.name }}'
    namespace: '{{ sealedsecrets_vars.kubernetes.namespace }}'
    update_repo_cache: true
    values: "{{ lookup('ansible.builtin.template', 'values.j2') | from_yaml }}"
    wait: true
  register: result
  delay: 1
  retries: 3
  until: result is not failed
  when: ansible_host == k3s_server_default_host
